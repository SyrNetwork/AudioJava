package Frame123;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.Mixer;
import javax.sound.sampled.SourceDataLine;
import javax.sound.sampled.TargetDataLine;
import javax.swing.JOptionPane;

public class NewJFrame extends javax.swing.JFrame {
boolean stopCapture = false;
ByteArrayOutputStream byteArrayOutputStream;
AudioFormat audioFormat;
TargetDataLine targetDataLine;
AudioInputStream audioInputStream;
BufferedOutputStream out = null;
BufferedInputStream in = null;
Socket sock = null;
SourceDataLine sourceDataLine;
 ServerSocket MyService;
   Socket clientSocket = null;
   BufferedInputStream input;
 
   byte tempBuffer[] = new byte[1000];
    private AudioFormat AudioFormat;

    public NewJFrame() {
        initComponents();
    }

    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("коннект");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("дисконнект");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jMenu3.setText("О программе");

        jMenuItem2.setText("О разработчиках");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuBar2.add(jMenu3);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(jButton1))))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jTextField1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        captureAudio();
        try {
            mysender();
        } catch (LineUnavailableException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
//захват
        jButton1.setEnabled(false);
        jButton2.setEnabled(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         System.exit(1);//выход
        jButton1.setEnabled(true);
        jButton2.setEnabled(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
JOptionPane.showMessageDialog( null, "Разработчик Яковлев Сергей и Теймур Гусейнов");
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed
private void captureAudio(){
    try{
         int port;
            port = Integer.parseInt(jTextField1.getText());
                MyService = new ServerSocket(port);
                clientSocket = MyService.accept();// Слушает сокет
        out = new BufferedOutputStream(clientSocket.getOutputStream());
        in = new BufferedInputStream(clientSocket.getInputStream());
        Mixer.Info[] mixerinfo = AudioSystem.getMixerInfo();//Получает информацию об этом микшере, включая имя продукта, версию, поставщика
        jTextArea1.append("Available mixers:\n");
        for (int cnt =0; cnt < mixerinfo.length; cnt++)//информация об одном микшере, ресурсы я так понимаю
        jTextArea1.append(mixerinfo[cnt].getName() + "\n");//ввод имени
        audioFormat = getAudioFormat();//Получает формат аудиоданных, содержавшихся в аудиофайле.ФУНКЦИЯ
        DataLine.Info dataLineInfo = new DataLine.Info(TargetDataLine.class, audioFormat);
        Mixer mixer = AudioSystem.getMixer(mixerinfo[3]);
        targetDataLine = (TargetDataLine)mixer.getLine(dataLineInfo);////Целевая строка данных является типом DataLine из которого могут быть считаны аудиоданные
        targetDataLine.open(audioFormat);//Открывает строку с указанным форматом, заставляя строку получить любые необходимые системные ресурсы и стать операционным.
        targetDataLine.start();//Позволяет строке участвовать во вводе-выводе данных
        Thread captureThread = new CaptureThread();//создает ниже
        captureThread.start();
        DataLine.Info dataLineInfo1 = new DataLine.Info(SourceDataLine.class, audioFormat);//обеспечивает дополнительную информацию, определенную для строк данных. Эта информация включает: 
//•аудиоформаты, поддерживаемые по условию строка 
//•минимальные и максимальные размеры его внутреннего буфера 

        sourceDataLine = (SourceDataLine)//Строка исходных данных является строкой данных, которой могут быть записаны данные
                AudioSystem.getLine(dataLineInfo1);
        sourceDataLine.open(audioFormat);//Открывает строку с указанным форматом, заставляя строку получить любые необходимые системные ресурсы и стать операционным
        sourceDataLine.start();   //Позволяет строке участвовать во вводе-выводе данных
    }catch(NumberFormatException | IOException | LineUnavailableException e){
        jTextArea1.append("Host not found!\n"+e);////добавление
    }
    
}

public void mysender() throws
        LineUnavailableException{//// Недоступность линии 
           try {
        AudioFormat=getAudioFormat();//Получает формат аудиоданных, содержавшихся в аудиофайле.
        DataLine.Info 
                dataLineinfo = new DataLine.Info(SourceDataLine.class,AudioFormat);////обеспечивает дополнительную информацию, определенную для строк данных.
        sourceDataLine = (SourceDataLine) AudioSystem.getLine(dataLineinfo);//добавляет связанная с носителями функциональность к ее интерфейсу
        sourceDataLine.open(AudioFormat);// открывает строку с форматом 
        sourceDataLine.start();//начинает запись в строку
        int sport;
      
            sport = Integer.parseInt(jTextField1.getText());
                MyService = new ServerSocket(sport);
                clientSocket = MyService.accept();// Слушает сокет
                
                input = new BufferedInputStream(clientSocket.getInputStream());
                out = new BufferedOutputStream(clientSocket.getOutputStream());
                while (input.read(tempBuffer)!=-1) // заполняет массив
                    sourceDataLine.write(tempBuffer, 0 , 1000);
                
               
           }
    catch(IOException e)
    {
        jTextArea1.append("IOException "+e);
    }
}   
class CaptureThread extends Thread{
    byte tempBuffer[] = new byte [1000];
        @Override
    public void run() {
        byteArrayOutputStream = new ByteArrayOutputStream();//реализует поток вывода в котором данные пишутся в байтовый массив
        stopCapture = false;//остановка захвата
        try{
            while(!stopCapture){
                int cnt = targetDataLine.read(tempBuffer, 0, tempBuffer.length);////массив из тысячи байтов
                out.write(tempBuffer);//вывод
                if(cnt > 0)
                    byteArrayOutputStream.write(tempBuffer,0 ,cnt);//
            }byteArrayOutputStream.close();
        }catch(IOException e){
            jTextArea1.append("Exception\n"+e);
        }
    }
}  

private AudioFormat getAudioFormat() {
    float sampleRate = 8000.0f;
    int sampleSizeInBits = 8;
    int channels = 1;
    boolean signed = true;
    boolean bigEndian = false;
    return new AudioFormat(sampleRate,sampleSizeInBits,channels,signed, bigEndian);
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
